# config/packages/security.yaml

security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username # Confirmado que usas 'username'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            
            # ¡NUEVA CONFIGURACIÓN! Cómo se autentica el usuario
            form_login:
                login_path: app_login # La ruta donde se muestra el formulario de login
                check_path: app_login # La ruta a la que se envían los datos del formulario (interceptada por Symfony)
                enable_csrf: true
                # Redirige al usuario a esta ruta después de un login exitoso
                # ¡Asegúrate de que 'app_show_parking' exista o cámbiala por tu ruta de dashboard!
                default_target_path: app_show_parking 
                # Si quieres que el usuario vuelva a la página que intentaba acceder antes del login:
                # always_use_default_target_path: false 
                # target_path_parameter: _target_path

            # ¡NUEVA CONFIGURACIÓN! Cómo se realiza el logout
            logout:
                path: app_logout # La ruta para cerrar sesión
                target: app_login # A dónde redirigir después de cerrar sesión

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # ¡NUEVAS REGLAS!
        # Permite el acceso público a la página de login
        - { path: ^/login$, roles: PUBLIC_ACCESS } # El '$' asegura que solo coincida con /login y no /login/algo
        # Permite el acceso público a la página de registro
        - { path: ^/register$, roles: PUBLIC_ACCESS }
        # Requiere autenticación completa para todas las demás rutas
        # ¡IMPORTANTE! Esta regla debe ir al final de las reglas públicas más específicas
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon