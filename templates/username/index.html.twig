{% block stylesheets %}
    <link href="{{ asset('css/styles.css') }}" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    {# Mantengo la referencia a tu styles.css por si tienes estilos personalizados #}
    <link href="{{ asset('css/styles.css') }}" rel="stylesheet" />
    <style>
    h1 {
        text-align: center;
        margin-top: 20px;
        margin-bottom: 20px;
    }
    .controllerLogin {
        position: fixed;
        top: 20px;
        right: 20px;
        display: flex;
        justify-content: center;
        margin-bottom: 20px;
    }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            border: 1px solid gray;
        }
        th, td {
            padding: 10px;
            text-align: center;
            border: 1px solid gray;
        }
        th {
            background-color:rgb(185, 185, 185);
        }
        button {
            margin-right: 5px;
            border : none;
            padding: 10px 15px;
            border-radius: 5px;
        }
        .Delete {
            background-color: red;
            color: white;
            &:hover {
                background-color: darkred;
            }
        }
        .ChagePassword {
            background-color: blue;
            color: white;
            &:hover {
                background-color: darkblue;
            }
        }
        .ChageRol {
            background-color: green;
            color: white;
            &:hover {
                background-color: darkgreen;
            }
        }
    </style>
{% endblock %}

{% block javascripts %}
    <script>
        // Funcion para cambiar el rol de un usuario
            // Hacer ADMIN
                function makeAdmin(id) {
                fetch(`/username/make-admin/${id}`, {
                    method: 'POST',
                    headers: { 'X-Requested-With': 'XMLHttpRequest' }
                }).then(() => location.reload());
                }
            // Quitar ADMIN
                function removeAdmin(id) {
                   fetch(`/username/remove-admin/${id}`, {
                        method: 'POST',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    }).then(res => {
                        if (res.status === 403) {
                            alert("No se puede quitar el rol de ADMIN: es el único administrador.");
                        } else {
                            location.reload();
                        }
                    });
                }
        // Función para cambiar la contraseña de un usuario
            function changePassword(userId) {
                const input = document.getElementById('new-pass-' + userId);
                if (!input) {
                    alert("No se encontró el campo de contraseña.");
                    return;
                }

                const newPassword = input.value.trim();
                const pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()_\-+=])[A-Za-z\d!@#$%^&*()_\-+=]{8,}$/;

                if (newPassword === "") {
                    alert("❌ La contraseña no puede estar vacía.");
                    return;
                }

                if (!pattern.test(newPassword)) {
                    alert("❌ La contraseña debe tener al menos 6 caracteres, incluyendo una mayúscula, minúscula, número y símbolo especial.");
                    return;
                }

                fetch(`/username/change-password/${userId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ password: newPassword })
                }).then(res => {
                    if (res.ok) {
                        alert("✅ Contraseña cambiada.");
                        input.value = '';
                    } else {
                        res.json().then(data => {
                            alert("❌ Error: " + (data.error || "desconocido"));
                        });
                    }
                });
            }
        // Función para eliminar un usuario 
            function deleteUser(id) {
                if (!confirm("¿Estás seguro de que deseas eliminar este usuario?")) {
                    return;
                }

                fetch(`/username/delete/${id}`, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                }).then(res => {
                    if (res.status === 403) {
                        alert("No se puede eliminar este usuario porque es el único administrador.");
                    } else if (res.ok) {
                        location.reload();
                    } else {
                        alert("Error al eliminar el usuario.");
                    }
                });
            }
    </script>
{% endblock %}

{% block body %}
<a href="{{ path('app_show_parking') }}" class="btn btn-secondary position-fixed top-0 start-0 m-3">← Volver a parking</a>
<h1>Lista de Usuarios</h1>
<div class="controllerLogin">
    {% if setting and setting.login %}
        <form method="post" action="{{ path('app_toggle_login') }}">
            <input type="hidden" name="estado" value="0">
            <button class="btn btn-danger">Desactivar el login</button>
        </form>
    {% else %}
        <form method="post" action="{{ path('app_toggle_login') }}">
            <input type="hidden" name="estado" value="1">
            <button class="btn btn-success">Activar el login</button>
        </form>
    {% endif %}
</div>
<table>
    <thead>
        <tr>
            <th>Username</th>
            <th>Roles</th>
            <th>Nueva contraseña</th>
            <th>Cambiar el ROL</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        {% for user in users %}
            <tr>
                <td>
                {{ user.username }}
                </td>
                <td>{{ 'ROLE_ADMIN' in user.roles ? 'Administrador' : 'Usuario' }}</td>
                <td>
                    <input type="password" placeholder="Nueva contraseña" id="new-pass-{{ user.id }}">
                </td>
                <td>
                    {% if 'ROLE_ADMIN' not in user.roles %}
                        <button class="ChageRol" onclick="makeAdmin({{ user.id }})">Hacer ADMIN</button>
                    {% else %}
                        <button class="ChageRol" onclick="removeAdmin({{ user.id }})">Quitar ADMIN</button>
                    {% endif %}
                </td>
                <td>
                    <button class="ChagePassword" onclick="changePassword({{ user.id }})">Cambiar Contraseña</button>
                    <button class="Delete" onclick="deleteUser({{ user.id }})">Eliminar</button>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="6">No hay usuarios</td>
            </tr>
        {% endfor %}
    </tbody>
</table>




{% endblock %}
